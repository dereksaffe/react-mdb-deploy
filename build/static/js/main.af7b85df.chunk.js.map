{"version":3,"sources":["components/images/reactMovie_logo.png","components/images/tmdb_logo.svg","components/styles/StyledHeader.js","components/elements/Header.js","config.js","components/styles/StyledHeroImage.js","components/elements/HeroImage.js","components/styles/StyledSearchBar.js","components/elements/SearchBar.js","components/styles/StyledGrid.js","components/elements/Grid.js","components/styles/StyledMovieThumb.js","components/elements/MovieThumb.js","components/styles/StyledLoadMoreBtn.js","components/elements/LoadMoreBtn.js","components/styles/StyledSpinner.js","components/elements/Spinner.js","components/Home.js","components/hooks/useHomeFetch.js","components/styles/StyledNavigation.js","components/elements/Navigation.js","components/styles/StyledMovieInfo.js","components/elements/MovieInfo.js","helpers.js","components/styles/StyledMovieInfoBar.js","components/elements/MovieInfoBar.js","components/styles/StyledActor.js","components/elements/Actor.js","components/Movie.js","components/hooks/useMovieFetch.js","components/NotFound.js","components/styles/GlobalStyle.js","components/App.js","index.js","components/images/no_image.jpg"],"names":["module","exports","StyledHeader","styled","div","StyledRMDBLogo","img","StyledTMDBLogo","Header","className","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","SEARCH_BASE_URL","POPULAR_BASE_URL","IMAGE_BASE_URL","StyledHeroImage","props","image","HeroImage","title","text","StyledSearchBar","StyledSearchBarContent","SearchBar","callback","useState","state","setState","timeOut","useRef","name","size","type","placeholder","onChange","event","value","target","clearTimeout","current","setTimeout","StyledGrid","StyledGridContent","Grid","header","children","StyledMovieThumb","MovieThumb","movieId","clickable","StyledLoadMoreBtn","button","LoadMoreBtn","onClick","StyledSpinner","Spinner","Home","searchTerm","setSearchTerm","movies","loading","setLoading","error","setError","fetchMovies","endpoint","a","isLoadMore","search","fetch","json","result","prev","results","heroImage","currentPage","page","totalPages","total_pages","console","log","useEffect","sessionStorage","homeState","JSON","parse","setItem","stringify","useHomeFetch","backdrop_path","original_title","overview","map","movie","key","id","poster_path","NoImage","movieName","searchEndpoint","popularEndpoint","StyledNavigation","Navigation","StyledMovieInfo","backdrop","MovieInfo","vote_average","directors","length","element","credit_id","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","StyledMovieInfoBar","MovieBarInfo","time","budget","revenue","hours","Math","floor","mins","calcTime","StyledActor","Actor","actor","profile_path","charcter","Movie","fetchData","useCallback","creditsEndpoint","creditsResult","crew","filter","member","job","actors","cast","localStorage","useMovieFetch","MovieInfoBar","runtime","NotFound","GlobalStyle","createGlobalStyle","App","path","default","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af7b85df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reactMovie_logo.08494abf.png\";","module.exports = __webpack_public_path__ + \"static/media/tmdb_logo.30cd724b.svg\";","import styled from 'styled-components';\n\nexport const StyledHeader = styled.div`\n  background: #1c1c1c;\n  padding: 0 20px;\n  box-sizing: border-box;\n\n  .header-content {\n    max-width: 1280px;\n    min-height: 120px;\n    padding: 20px 0px;\n    margin: 0 auto;\n    box-sizing: border-box;\n\n    @media screen and (max-width: 500px) {\n      max-width: 1280px;\n      min-height: 0px;\n    }\n  }\n`;\n\nexport const StyledRMDBLogo = styled.img`\n  width: 250px;\n  margin-top: 20px;\n\n  @media screen and (max-width: 500px) {\n    width: 150px;\n    margin-top: 5px;\n  }\n`;\n\nexport const StyledTMDBLogo = styled.img`\n  width: 122px;\n  margin-top: 25px;\n  float: right;\n\n  @media screen and (max-width: 500px) {\n    display: inline-block;\n    width: 80px;\n    margin-top: 0px;\n  }\n`;\n","import React from 'react';\nimport { Link } from '@reach/router';\n\n\nimport RMDBLogo from '../images/reactMovie_logo.png';\nimport TMDBLogo from '../images/tmdb_logo.svg';\n\n\nimport { StyledHeader, StyledRMDBLogo, StyledTMDBLogo} from '../styles/StyledHeader';\n\nconst Header = () => (\n  <StyledHeader>\n    <div className=\"header-content\">\n      <Link to =\"/\">\n        <StyledRMDBLogo src={RMDBLogo} alt=\"rmdb-logo\"/>\n      </Link>\n      <StyledTMDBLogo src={TMDBLogo} alt=\"tmdb-logo\" />\n    </div>\n  </StyledHeader>\n)\nexport default Header;\n","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '87396a95dd5580d368a74c29af8ccff9';\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}`;\n\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL\n};\n","import styled from 'styled-components';\n\nexport const StyledHeroImage = styled.div`\n  background: ${props =>\n    `linear-gradient(\n      to bottom, rgba(0,0,0,0)\n      39%,rgba(0,0,0,0)\n      41%,rgba(0,0,0,0.65)\n      100%\n    ),\n    url('${props.image}'), #1c1c1c`};\n  background-size: 100%, cover !important;\n  background-position: center, center !important;\n  width: 100%;\n  height: 600px;\n  position: relative;\n  animation: animateHeroimage 1s;\n\n  .heroimage-content {\n    max-width: 1280px;\n    padding: 20px;\n    margin: 0 auto;\n  }\n\n  .heroimage-text {\n    z-index: 100;\n    max-width: 700px;\n    position: absolute;\n    bottom: 40px;\n    margin-right: 20px;\n    min-height: 100px;\n    background: rgba(0, 0, 0, 0);\n    color: #fff;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 38px;\n        color: #fff;\n      }\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      line-height: 26px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 16px;\n        line-height: 20px;\n        color: #fff;\n      }\n    }\n\n    @media screen and (max-width: 720px) {\n      max-width: 100%;\n    }\n  }\n\n  @keyframes animateHeroimage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport { StyledHeroImage} from '../styles/StyledHeroImage';\n\n\nconst HeroImage = ({ image, title, text }) => (\n  <StyledHeroImage image={image}>\n    <div className=\"heroimage-content\">\n     <div className=\"heroimage-text\">\n       <h1>{title}</h1>\n       <p>{text}</p>\n     </div>\n    </div>\n  </StyledHeroImage>\n)\n\n\nHeroImage.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.string,\n  text: PropTypes.string,\n}\n\nexport default HeroImage;\n","import styled from 'styled-components';\n\nexport const StyledSearchBar = styled.div`\n  width: 100%;\n  height: 105px;\n  background: #1c1c1c;\n  padding: 25px 20px 0px 20px;\n  box-sizing: border-box;\n  color: #fff;\n`;\n\nexport const StyledSearchBarContent = styled.div`\n  max-width: 1280px;\n  width: 100%;\n  height: 55px;\n  background: #353535;\n  margin: 0 auto;\n  border-radius: 40px;\n  position: relative;\n  color: #fff;\n\n  .fa-search {\n    position: absolute;\n    left: 20px;\n    top: 12px;\n    color: #fff;\n    z-index: 1000;\n  }\n\n  input {\n    font-family: 'Abel', sans-serif;\n    font-size: 28px;\n    position: absolute;\n    left: 0px;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height: 40px;\n    color: #fff;\n    box-sizing: border-box;\n\n    :focus {\n      outline: none;\n    }\n\n    @media screen and (max-width: 720px) {\n      font-size: 28px;\n    }\n  }\n`;\n","import React, {useState, useRef} from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport PropTypes from 'prop-types';\n\n\nimport {StyledSearchBarContent, StyledSearchBar} from '../styles/StyledSearchBar';\n\nconst SearchBar = ({ callback }) => {\n  const [state,setState] = useState('');\n  const timeOut =useRef(null);\n\n  const doSearch = event => {\n    const { value } = event.target;\n\n    clearTimeout(timeOut.current);\n    setState(value);\n\n    timeOut.current = setTimeout(()=>{\n      callback(value);\n    }, 500);\n  }\n  return (\n    <StyledSearchBar>\n      <StyledSearchBarContent>\n        <FontAwesome className=\"fa-search\" name=\"search\" size=\"2x\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search Movie\"\n          onChange={doSearch}\n          value={state}\n          />\n      </StyledSearchBarContent>\n    </StyledSearchBar>\n  )\n}\n\nSearchBar.propTypes = {\n  callback: PropTypes.func,\n}\n\nexport default SearchBar;\n","import styled from 'styled-components';\n\nexport const StyledGrid = styled.div`\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 0 20px;\n  h1 {\n    font-family: 'Abel', sans-serif;\n    font-size: 42px;\n\n    @media screen and (max-width: 768px) {\n      font-size: 22px;\n    }\n  }\n`;\n\nexport const StyledGridContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, minmax(100px, 1fr));\n  grid-gap: 40px;\n  position: relative;\n\n  .grid-element {\n    animation: animateGrid 0.5s;\n  }\n\n  @keyframes animateGrid {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: repeat(4, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 768px) {\n    grid-template-columns: repeat(3, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 600px) {\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 375px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport { StyledGrid, StyledGridContent} from '../styles/StyledGrid';\n\nconst Grid = ( { header, children }) => (\n<StyledGrid>\n  <h1>{header}</h1>\n  <StyledGridContent>{children}</StyledGridContent>\n</StyledGrid>)\n\nGrid.propTypes = {\n  header: PropTypes.string,\n}\n\nexport default Grid;\n","import styled from 'styled-components';\n\nexport const StyledMovieThumb = styled.div`\n  img {\n    width: 100%;\n    height: auto;\n    /* max-height: 350px; */\n    transition: all 0.3s;\n    object-fit: cover;\n    border-radius: 20px;\n\n    :hover {\n      opacity: 0.8;\n    }\n\n    /* @media screen and (max-width: 1024px) {\n      height: 300px;\n    }\n\n    @media screen and (max-width: 768px) {\n      height: 350px;\n    }\n\n    @media screen and (max-width: 600px) {\n      max-height: 300px;\n    }\n\n    @media screen and (max-width: 375px) {\n      max-height: 450px;\n    } */\n\n    .clickable {\n      cursor: pointer;\n    }\n  }\n`;\n","import React from 'react';\nimport  { Link } from '@reach/router';\nimport PropTypes from 'prop-types';\n\nimport { StyledMovieThumb } from '../styles/StyledMovieThumb';\n\nconst MovieThumb = ({ image, movieId, clickable}) => (\n<StyledMovieThumb>\n{clickable ? (\n  <Link to={`/${movieId}`}>\n    <img className=\"clickable\" src={image} alt=\"moviethumb\"/>\n  </Link>\n) : (\n   <img src={image} alt=\"moviethumb\" />\n)}\n</StyledMovieThumb>\n)\n\nMovieThumb.propTypes = {\n  image: PropTypes.string,\n  movieID: PropTypes.number,\n  clickable: PropTypes.bool,\n}\n\nexport default MovieThumb;\n","import styled from 'styled-components';\n\nexport const StyledLoadMoreBtn = styled.button`\n  background: #000;\n  width: 25%;\n  min-width: 200px;\n  height: 70px;\n  color: #fff;\n  cursor: pointer;\n  transition: all 0.3s;\n  border-radius: 40px;\n  font-family: 'Abel', sans-serif;\n  font-size: 28px;\n  max-width: 1280px;\n  display: block;\n  margin: 20px auto;\n  padding: 0 20px;\n  outline: none;\n\n  :hover {\n    opacity: 0.8;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport { StyledLoadMoreBtn } from '../styles/StyledLoadMoreBtn';\n\nconst LoadMoreBtn = ({ text, callback }) => (\n<StyledLoadMoreBtn type=\"button\" onClick={callback}>\n  {text}\n</StyledLoadMoreBtn>)\n\nLoadMoreBtn.propTypes = {\n  text:PropTypes.string,\n  callback:PropTypes.func,\n}\n\nexport default LoadMoreBtn;\n","import styled from 'styled-components';\n\nexport const StyledSpinner = styled.div`\n  border: 5px solid #f3f3f3; /* Light grey */\n  border-top: 5px solid #16d47b; /* Blue */\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import React from 'react';\n\nimport {StyledSpinner} from '../styles/StyledSpinner';\n\n\nconst Spinner = () =><StyledSpinner></StyledSpinner>\n\nexport default Spinner;\n","import React, { useState } from 'react';\nimport {\n  POSTER_SIZE,\n  BACKDROP_SIZE,\n  IMAGE_BASE_URL,\n  POPULAR_BASE_URL,\n  SEARCH_BASE_URL\n} from '../config';\n\n// import Components\nimport HeroImage from './elements/HeroImage';\nimport SearchBar from './elements/SearchBar';\nimport Grid from './elements/Grid';\nimport MovieThumb from './elements/MovieThumb';\nimport LoadMoreBtn from './elements/LoadMoreBtn';\nimport Spinner from './elements/Spinner';\n\n// Custom Hook\nimport { useHomeFetch } from './hooks/useHomeFetch';\n\nimport NoImage from './images/no_image.jpg';\n\nconst Home = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [\n    {\n      state: { movies, currentPage, totalPages, heroImage },\n      loading,\n      error,\n    },\n    fetchMovies,\n  ] = useHomeFetch(searchTerm);\n\n  const searchMovies = search => {\n    const endpoint = search ? SEARCH_BASE_URL + search : POPULAR_BASE_URL;\n\n    setSearchTerm(search);\n    fetchMovies(endpoint);\n  }\n\n\n  const loadMoreMovies = () => {\n    const searchEndpoint = `${SEARCH_BASE_URL}${searchTerm}&page=${currentPage + 1}`;\n    const popularEndpoint = `${POPULAR_BASE_URL}&page=${currentPage + 1}`;\n\n    const endpoint = searchTerm ? searchEndpoint : popularEndpoint;\n\n    fetchMovies(endpoint);\n\n  }\n\n  if (error) return <div>Something went wrong ...</div>;\n  if (!movies[0]) return <Spinner />;\n\n  return (\n    <>\n      { !searchTerm && (\n      <HeroImage\n        image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\n        title={heroImage.original_title}\n        text={heroImage.overview}\n      />\n      )}\n      <SearchBar callback={searchMovies}/>\n      <Grid header={searchTerm ? 'Search Result' : 'Popular Movies'}>\n        {movies.map(movie => (\n          <MovieThumb\n            key={movie.id}\n            clickable\n            image={\n              movie.poster_path\n                ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\n                : NoImage\n            }\n            movieId={movie.id}\n            movieName={movie.original_title}\n          />\n        ))}\n      </Grid>\n      {loading && <Spinner />}\n      {currentPage < totalPages && !loading && (\n      <LoadMoreBtn text=\"Load More\" callback={loadMoreMovies} /> )}\n    </>\n  );\n};\n\nexport default Home;\n","import { useState, useEffect } from 'react';\nimport {POPULAR_BASE_URL} from '../../config';\n\nexport const useHomeFetch = searchTerm => {\n  const [state, setState] = useState({ movies: [] });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const fetchMovies = async endpoint => {\n    setError(false);\n    setLoading(true);\n\n    const isLoadMore = endpoint.search('page');\n\n    try {\n      const result = await (await fetch(endpoint)).json();\n      setState(prev => ({\n        ...prev,\n        movies:\n          isLoadMore !== -1\n        ? [...prev.movies, ...result.results]\n        : [...result.results],\n        heroImage: prev.heroImage || result.results[0],\n        currentPage: result.page,\n        totalPages: result.total_pages\n      }))\n\n    } catch (error) {\n      setError(true);\n      console.log(error);\n    }\n    setLoading(false);\n  }\n\n  // Fetch popular movies initially on mount\n  useEffect(() => {\n    if (sessionStorage.homeState) {\n      setState(JSON.parse(sessionStorage.homeState));\n      setLoading(false);\n    } else {\n      fetchMovies(POPULAR_BASE_URL);\n    }\n  }, [])\n\n  useEffect(() => {\n    if (!searchTerm) {\n       sessionStorage.setItem('homeState', JSON.stringify(state));\n    }\n  }, [searchTerm, state])\n\n\n  return [{ state, loading, error}, fetchMovies];\n}\n","import styled from 'styled-components';\n\nexport const StyledNavigation = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 70px;\n  background: #353535;\n  color: #fff;\n\n  .navigation-content {\n    max-width: 1280px;\n    margin: 0 auto;\n    padding: 0 20px;\n    width: 100%;\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      float: left;\n      color: #fff;\n      padding-right: 10px;\n      text-decoration: none;\n\n      @media screen and (max-width: 768px) {\n        font-size: 16px;\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { Link } from '@reach/router';\nimport PropTypes from 'prop-types';\n\n\nimport { StyledNavigation } from '../styles/StyledNavigation';\n\nconst Navigation = ({movie}) => (\n  <StyledNavigation>\n    <div className=\"navigation-content\">\n      <Link to=\"/\">\n        <p>Home</p>\n      </Link>\n      <p>|</p>\n      <p>{movie}</p>\n    </div>\n  </StyledNavigation>\n)\n\nNavigation.propTypes = {\n  movie: PropTypes.string,\n}\nexport default Navigation;\n","import styled from 'styled-components';\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from '../../config';\n\nexport const StyledMovieInfo = styled.div`\n  background: ${props =>\n    props.backdrop\n      ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.backdrop}')`\n      : '#000'};\n  background-size: cover !important;\n  background-position: center !important;\n  width: 100%;\n  padding: 40px 20px;\n  box-sizing: border-box;\n  animation: animateMovieinfo 1s;\n\n  .movieinfo-content {\n    max-width: 1280px;\n    min-height: 450px;\n    margin: 0 auto;\n    background: rgb(0, 0, 0, 0.7);\n    border-radius: 20px;\n    position: relative;\n  }\n\n  .movieinfo-thumb {\n    width: 300px;\n    float: left;\n\n    @media screen and (max-width: 768px) {\n      width: 100% !important;\n    }\n  }\n\n  .movieinfo-text {\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 40px;\n    color: #fff;\n    overflow: hidden;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      margin: 0;\n\n      @media screen and (max-width: 1000px) {\n        font-size: 32px !important;\n      }\n    }\n\n    h3 {\n      font-size: 16px;\n      line-height: 0;\n      margin-top: 30px;\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 18px;\n      line-height: 26px;\n    }\n  }\n\n  .rating-director {\n    display: flex;\n    justify-content: flex-start;\n  }\n\n  .score {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 35px;\n    height: 35px;\n    background: #fff;\n    color: #000;\n    font-weight: 800;\n    border-radius: 25px;\n    margin: 0px 0 0 0;\n  }\n\n  .director {\n    margin: 0 0 0 40px;\n\n    p {\n      margin: 0;\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    min-height: 600px;\n    height: auto;\n  }\n\n  @keyframes animateMovieinfo {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport NoImage from '../images/no_image.jpg';\nimport { IMAGE_BASE_URL, POSTER_SIZE} from '../../config';\n\nimport MovieThumb from './MovieThumb';\n\nimport { StyledMovieInfo } from '../styles/StyledMovieInfo';\n\nconst MovieInfo = ({ movie }) => (\n  <StyledMovieInfo backdrop={movie.backdrop_path}>\n    <div className=\"movieinfo-content\">\n      <div className=\"movieinfo-thumb\">\n        <MovieThumb\n          image={\n            movie.poster_path\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n            : NoImage\n          }\n          clickable={false}\n          />\n      </div>\n      <div className =\"movieinfo-text\">\n        <h1>{movie.title}</h1>\n        <h3>PLOT</h3>\n        <p>{movie.overview}</p>\n\n        <div className=\"rating-director\">\n          <div>\n            <h3>IMDB RATING</h3>\n            <div className=\"score\">{movie.vote_average}</div>\n          </div>\n        <div className=\"director\">\n          <h3>DIRECTOR{movie.directors.length > 1 ? 'S' : ''}</h3>\n         {movie.directors.map(element => (\n            <p key={element.credit_id}>{element.name}</p>\n         ))}\n         </div>\n      </div>\n    </div>\n  </div>\n\n\n  </StyledMovieInfo>\n);\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object,\n  directors: PropTypes.array,\n}\n\nexport default MovieInfo;\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n","import styled from 'styled-components';\n\nexport const StyledMovieInfoBar = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: 100px;\n  height: auto;\n  background: #1c1c1c;\n  padding: 20px;\n  box-sizing: border-box;\n  font-family: 'Abel', sans-serif;\n  font-size: 20px;\n\n  .movieinfobar-content {\n    max-width: 1280px;\n    width: 100%;\n    margin: 0 auto;\n    color: #fff;\n  }\n\n  .movieinfobar-content-col {\n    float: left;\n    width: 33.33%;\n    box-sizing: border-box;\n    padding: 10px 20px 0 0;\n  }\n\n  .movieinfobar-info {\n    padding: 5px 0 0 10px;\n    float: left;\n  }\n\n  .fa-time,\n  .fa-revenue {\n    float: left;\n    margin-top: -4px;\n  }\n\n  .fa-budget {\n    float: left;\n    margin-top: -3px;\n  }\n\n  @media screen and (max-width: 768px) {\n    .fa-time,\n    .fa-revenue,\n    .fa-budget {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 425px) {\n    font-size: 14px;\n  }\n`;\n","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport { calcTime, convertMoney} from '../../helpers';\nimport PropTypes from 'prop-types';\n\n\nimport { StyledMovieInfoBar } from '../styles/StyledMovieInfoBar';\n\nconst MovieBarInfo = ({time, budget, revenue}) => (\n  <StyledMovieInfoBar>\n    <div className=\"movieinfobar-content\">\n\n      <div className=\"movieinfobar-content-col\">\n        <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\"/>\n        <span className=\"movieinfobar-info\">\n          Running time: {calcTime(time)}\n        </span>\n      </div>\n\n       <div className = \"movieinfobar-content-col\" >\n         <FontAwesome className = \"fa-budget\" name = \"money\" size = \"2x\"/>\n         <span className = \"movieinfobar-info\">\n           Budget: { convertMoney(budget)}\n         </span>\n       </div>\n\n       <div className = \"movieinfobar-content-col\" >\n         <FontAwesome className = \"fa-revenue\" name = \"ticket\" size = \"2x\"/>\n         <span className = \"movieinfobar-info\">\n           Revenue: { convertMoney(revenue)}\n         </span>\n       </div>\n\n    </div>\n  </StyledMovieInfoBar>\n);\n\n\nMovieBarInfo.propTypes = {\n  time: PropTypes.number,\n  budget: PropTypes.number,\n  revenue: PropTypes.number,\n}\n\n\nexport default MovieBarInfo;\n","import styled from 'styled-components';\n\nexport const StyledActor = styled.div`\n  font-family: 'Abel', sans-serif;\n  color: #fff;\n  background: #1c1c1c;\n  border-radius: 20px;\n  padding: 5px;\n  text-align: center;\n\n  img {\n    display: block;\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    border-radius: 15px;\n  }\n\n  .actor-name {\n    display: block;\n    font-size: 18px;\n    margin: 10px 0 0 0;\n  }\n\n  .actor-character {\n    display: block;\n    font-size: 16px;\n    margin: 0 0 10px 0;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport NoImage from '../images/no_image.jpg';\n\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\nimport { StyledActor} from '../styles/StyledActor';\n\nconst Actor = ({ actor }) => (\n  <StyledActor>\n    <img\n      src = {\n        actor.profile_path\n        ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\n        : NoImage\n      }\n\n      alt=\"actorthumb\"\n    />\n    <span className=\"actor-name\">{actor.name}</span>\n    <span className=\"actor-character\">{actor.charcter}</span>\n  </StyledActor>\n);\n\nActor.propTypes = {\n  actor: PropTypes.object,\n}\n\n\nexport default Actor;\n","import React from 'react';\n\n\n//components\nimport Navigation from './elements/Navigation';\nimport MovieInfo from './elements/MovieInfo';\nimport MovieInfoBar from './elements/MovieInfoBar';\nimport Actor from './elements/Actor';\nimport Grid from './elements/Grid';\nimport Spinner from './elements/Spinner';\n\nimport { useMovieFetch} from './hooks/useMovieFetch';\n\nconst Movie = ({ movieId }) => {\n  const [movie, loading, error] = useMovieFetch(movieId)\n  console.log(movie);\n\n  if (error) return <div> Something went wrong ;( </div>;\n  if (loading) return <Spinner />\n\n  return (\n  <>\n    <Navigation movie ={movie.title} />\n    <MovieInfo  movie={movie}/>\n    <MovieInfoBar\n      time={movie.runtime}\n      budget={movie.budget}\n      revenue={movie.revenue}\n    />\n    <Grid header=\"Actors\">\n       {movie.actors.map(actor => (\n         <Actor key={actor.credit_id} actor={actor}/>\n       ))}\n    </Grid>\n  </>\n  )\n};\n\nexport default Movie;\n\n","import { useState, useEffect, useCallback } from 'react';\nimport { API_URL, API_KEY } from '../../config';\n\nexport const useMovieFetch = movieId => {\n  const [state,setState] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const fetchData = useCallback(async () => {\n    setError (false);\n    setLoading (true);\n\n    try {\n      const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n      const result = await (await fetch(endpoint)).json();\n      const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n      const creditsResult = await (await fetch(creditsEndpoint)).json();\n      const directors = creditsResult.crew.filter(\n        member => member.job === 'Director'\n      );\n\n      setState({\n        ...result,\n        actors: creditsResult.cast,\n        directors,\n      })\n\n    } catch (error) {\n      setError(true);\n    }\n    setLoading(false);\n  }, [movieId])\n\n  useEffect(()=>{\n    if (localStorage[movieId]) {\n      setState(JSON.parse(localStorage[movieId]));\n          setLoading(false);\n\n    } else {\n      fetchData();\n    }\n  }, [fetchData, movieId]);\n\n\n  useEffect(() =>{\n    localStorage.setItem(movieId, JSON.stringify(state));\n  }, [movieId, state]);\n\n  return [state,loading, error];\n}\n","import React from 'react';\n\nconst NotFound = () => <div> Whoops! Nothing can be found here...</div>;\n\nexport default NotFound;\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n`;\n","import React from 'react';\nimport { Router } from '@reach/router';\n\nimport Header from './elements/Header';\nimport Home from './Home';\nimport Movie from './Movie';\nimport NotFound from './NotFound';\n\nimport { GlobalStyle } from './styles/GlobalStyle';\n\nconst App = () =>(\n  <>\n    <Header />\n    <Router>\n      <Home path=\"/\" />\n      <Movie path=\"/:movieId\" />\n      <NotFound default />\n    </Router>\n\n    <GlobalStyle />\n  </>\n)\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/no_image.31f5bb1d.jpg\";"],"sourceRoot":""}