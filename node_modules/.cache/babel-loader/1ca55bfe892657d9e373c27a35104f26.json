{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { POPULAR_BASE_URL } from '../../config';\nexport const useHomeFetch = searchTerm => {\n  const [state, setState] = useState({\n    movies: []\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const fetchMovies = async endpoint => {\n    setError(false);\n    setLoading(true);\n    const isLoadMore = endpoint.search('page');\n\n    try {\n      const result = await (await fetch(endpoint)).json();\n      setState(prev => ({ ...prev,\n        movies: isLoadMore !== -1 ? [...prev.movies, ...result.results] : [...result.results],\n        heroImage: prev.heroImage || result.results[0],\n        currentPage: result.page,\n        totalPages: result.total_pages\n      }));\n    } catch (error) {\n      setError(true);\n      console.log(error);\n    }\n\n    setLoading(false);\n  }; // Fetch popular movies initially on mount\n\n\n  useEffect(() => {\n    if (sessionStorage.homeState) {\n      setState(JSON.parse(sessionStorage.homeState));\n      setLoading(false);\n    } else {\n      fetchMovies(POPULAR_BASE_URL);\n    }\n  }, []);\n  useEffect(() => {\n    if (!searchTerm) {\n      sessionStorage.setItem('homeState', JSON.stringify(state));\n    }\n  }, [searchTerm, state]);\n  return [{\n    state,\n    loading,\n    error\n  }, fetchMovies];\n};","map":{"version":3,"sources":["/Users/dcash/Desktop/react_portfolio/react-rmdb-starterFiles_rev1/React_MDB_App_Portfolio_Example/src/components/hooks/useHomeFetch.js"],"names":["useState","useEffect","POPULAR_BASE_URL","useHomeFetch","searchTerm","state","setState","movies","loading","setLoading","error","setError","fetchMovies","endpoint","isLoadMore","search","result","fetch","json","prev","results","heroImage","currentPage","page","totalPages","total_pages","console","log","sessionStorage","homeState","JSON","parse","setItem","stringify"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAAQC,gBAAR,QAA+B,cAA/B;AAEA,OAAO,MAAMC,YAAY,GAAGC,UAAU,IAAI;AACxC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC;AAAEO,IAAAA,MAAM,EAAE;AAAV,GAAD,CAAlC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMY,WAAW,GAAG,MAAMC,QAAN,IAAkB;AACpCF,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,UAAMK,UAAU,GAAGD,QAAQ,CAACE,MAAT,CAAgB,MAAhB,CAAnB;;AAEA,QAAI;AACF,YAAMC,MAAM,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACJ,QAAD,CAAZ,EAAwBK,IAAxB,EAArB;AACAZ,MAAAA,QAAQ,CAACa,IAAI,KAAK,EAChB,GAAGA,IADa;AAEhBZ,QAAAA,MAAM,EACJO,UAAU,KAAK,CAAC,CAAhB,GACA,CAAC,GAAGK,IAAI,CAACZ,MAAT,EAAiB,GAAGS,MAAM,CAACI,OAA3B,CADA,GAEA,CAAC,GAAGJ,MAAM,CAACI,OAAX,CALc;AAMhBC,QAAAA,SAAS,EAAEF,IAAI,CAACE,SAAL,IAAkBL,MAAM,CAACI,OAAP,CAAe,CAAf,CANb;AAOhBE,QAAAA,WAAW,EAAEN,MAAM,CAACO,IAPJ;AAQhBC,QAAAA,UAAU,EAAER,MAAM,CAACS;AARH,OAAL,CAAL,CAAR;AAWD,KAbD,CAaE,OAAOf,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;AACD;;AACDD,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAxBD,CALwC,CA+BxC;;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI2B,cAAc,CAACC,SAAnB,EAA8B;AAC5BvB,MAAAA,QAAQ,CAACwB,IAAI,CAACC,KAAL,CAAWH,cAAc,CAACC,SAA1B,CAAD,CAAR;AACApB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHD,MAGO;AACLG,MAAAA,WAAW,CAACV,gBAAD,CAAX;AACD;AACF,GAPQ,EAON,EAPM,CAAT;AASAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACG,UAAL,EAAiB;AACdwB,MAAAA,cAAc,CAACI,OAAf,CAAuB,WAAvB,EAAoCF,IAAI,CAACG,SAAL,CAAe5B,KAAf,CAApC;AACF;AACF,GAJQ,EAIN,CAACD,UAAD,EAAaC,KAAb,CAJM,CAAT;AAOA,SAAO,CAAC;AAAEA,IAAAA,KAAF;AAASG,IAAAA,OAAT;AAAkBE,IAAAA;AAAlB,GAAD,EAA2BE,WAA3B,CAAP;AACD,CAjDM","sourcesContent":["import { useState, useEffect } from 'react';\nimport {POPULAR_BASE_URL} from '../../config';\n\nexport const useHomeFetch = searchTerm => {\n  const [state, setState] = useState({ movies: [] });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const fetchMovies = async endpoint => {\n    setError(false);\n    setLoading(true);\n\n    const isLoadMore = endpoint.search('page');\n\n    try {\n      const result = await (await fetch(endpoint)).json();\n      setState(prev => ({\n        ...prev,\n        movies:\n          isLoadMore !== -1\n        ? [...prev.movies, ...result.results]\n        : [...result.results],\n        heroImage: prev.heroImage || result.results[0],\n        currentPage: result.page,\n        totalPages: result.total_pages\n      }))\n\n    } catch (error) {\n      setError(true);\n      console.log(error);\n    }\n    setLoading(false);\n  }\n\n  // Fetch popular movies initially on mount\n  useEffect(() => {\n    if (sessionStorage.homeState) {\n      setState(JSON.parse(sessionStorage.homeState));\n      setLoading(false);\n    } else {\n      fetchMovies(POPULAR_BASE_URL);\n    }\n  }, [])\n\n  useEffect(() => {\n    if (!searchTerm) {\n       sessionStorage.setItem('homeState', JSON.stringify(state));\n    }\n  }, [searchTerm, state])\n\n\n  return [{ state, loading, error}, fetchMovies];\n}\n"]},"metadata":{},"sourceType":"module"}